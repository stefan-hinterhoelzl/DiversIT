{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/admin-page/admin-page.component.ts","./src/app/admin-page/admin-page.component.html","./src/app/angular-material-module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chat/chat.component.ts","./src/app/chat/chat.component.html","./src/app/forum/forum.component.ts","./src/app/forum/forum.component.html","./src/app/landing-page/landing-page-components/job-profiles/job-profiles.component.ts","./src/app/landing-page/landing-page-components/job-profiles/job-profiles.component.html","./src/app/landing-page/landing-page-components/mentor-spotlight/mentor-spotlight.component.ts","./src/app/landing-page/landing-page-components/mentor-spotlight/mentor-spotlight.component.html","./src/app/landing-page/landing-page-components/mission/mission.component.ts","./src/app/landing-page/landing-page-components/mission/mission.component.html","./src/app/landing-page/landing-page-components/navbar/navbar.component.ts","./src/app/landing-page/landing-page-components/navbar/navbar.component.html","./src/app/landing-page/landing-page.component.ts","./src/app/landing-page/landing-page.component.html","./src/app/login-box/login-box.component.ts","./src/app/login-box/login-box.component.html","./src/app/main/main-components/center-panel/center-panel.component.ts","./src/app/main/main-components/center-panel/center-panel.component.html","./src/app/main/main-components/center-panel/creating-new-post-card/creating-new-post-card.component.ts","./src/app/main/main-components/center-panel/creating-new-post-card/creating-new-post-card.component.html","./src/app/main/main-components/center-panel/post-card/post-card.component.ts","./src/app/main/main-components/center-panel/post-card/post-card.component.html","./src/app/main/main-components/left-panel/left-panel.component.ts","./src/app/main/main-components/left-panel/left-panel.component.html","./src/app/main/main-components/left-panel/profile-card/profile-card.component.ts","./src/app/main/main-components/left-panel/profile-card/profile-card.component.html","./src/app/main/main-components/right-panel/interesting-mentors/interesting-mentors.component.ts","./src/app/main/main-components/right-panel/interesting-mentors/interesting-mentors.component.html","./src/app/main/main-components/right-panel/right-panel.component.ts","./src/app/main/main-components/right-panel/right-panel.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/profile-page/profile-page.component.ts","./src/app/profile-page/profile-page.component.html","./src/app/services/adminguard.service.ts","./src/app/services/auth.service.ts","./src/app/services/authguard.service.ts","./src/app/services/firestore.service.ts","./src/app/snackbar/snackbar.component.ts","./src/app/unauthorized/unauthorized.component.ts","./src/app/unauthorized/unauthorized.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DiversITUser } from '../models/users.model';\r\nimport { FirestoreService } from '../services/firestore.service';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n  selector: 'app-admin-page',\r\n  templateUrl: './admin-page.component.html',\r\n  styleUrls: ['./admin-page.component.scss']\r\n})\r\nexport class AdminPageComponent implements OnInit {\r\n\r\n  users: DiversITUser[]\r\n  admins: DiversITUser[]\r\n  mentees: DiversITUser[]\r\n  mentors: DiversITUser[]\r\n  dataSourceMentees: any\r\n  dataSourceMentors: any\r\n  dataSourceAdmins: any\r\n  displayedColumnsAdmins: string[] = ['email', 'lastLogin', 'creationDate'];\r\n  displayedColumns: string[] = ['email', 'lastLogin', 'creationDate', 'button'];\r\n\r\n  constructor(private firestore: FirestoreService, private snackbar: SnackbarComponent) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.users = await this.firestore.getAllUsersPromise();\r\n\r\n    this.admins = this.users.filter((element) => element.role == 1)\r\n    this.mentees = this.users.filter((element) => element.role == 3)\r\n    this.mentors = this.users.filter((element) => element.role == 2)\r\n\r\n    this.dataSourceMentees = new MatTableDataSource(this.mentees)\r\n    this.dataSourceMentors = new MatTableDataSource(this.mentors)\r\n    this.dataSourceAdmins = new MatTableDataSource(this.admins)\r\n  }\r\n\r\n  applyFilterMentee(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSourceMentees.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  applyFilterMentors(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSourceMentees.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  applyFilterAdmins(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSourceMentees.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n\r\n  promoteUserToMentor(element: DiversITUser) {\r\n    this.firestore.promoteMenteeToMentor(element).then(() => {\r\n      this.mentees = this.mentees.filter((x) => x.uid != element.uid)\r\n      this.dataSourceMentees = new MatTableDataSource(this.mentees);\r\n      this.mentors.push(element);\r\n      this.dataSourceMentors = new MatTableDataSource(this.mentors);\r\n    }).catch(() => {\r\n      this.snackbar.openSnackBar(\"Aktion fehlgeschlagen\", \"snackbar-red\");\r\n    });\r\n  }\r\n\r\n  demoteUserToMentee(element: DiversITUser) {\r\n    this.firestore.demoteMenteeToMentor(element).then(() => {\r\n      this.mentors = this.mentors = this.mentors.filter((x) => x.uid != element.uid)\r\n      this.dataSourceMentors = new MatTableDataSource(this.mentors);\r\n      this.mentees.push(element);\r\n      this.dataSourceMentees = new MatTableDataSource(this.mentees);\r\n    }).catch(() => {\r\n      this.snackbar.openSnackBar(\"Aktion fehlgeschlagen\", \"snackbar-red\");\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class = \"main-wrapper\" fxLayout = column fxLayoutAlign = \"start center\">\r\n\r\n    <h2>Admins</h2>\r\n    <mat-form-field style = \"width: 60%;\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput (keyup)=\"applyFilterAdmins($event)\"  #input>\r\n    </mat-form-field>\r\n\r\n    <table style = \"width: 60%;\" mat-table [dataSource]=\"dataSourceAdmins\" class=\"mat-elevation-z8\">\r\n        <!-- Email Column -->\r\n        <ng-container matColumnDef=\"email\">\r\n            <th mat-header-cell *matHeaderCellDef> Email </th>\r\n            <td mat-cell *matCellDef=\"let element\" > {{element.email}} </td>\r\n          </ng-container>\r\n        <!-- Letzter Login Column -->\r\n        <ng-container matColumnDef=\"lastLogin\">\r\n            <th mat-header-cell *matHeaderCellDef> Letzter Login </th>\r\n            <td mat-cell *matCellDef=\"let element\" > {{element.lastLoggedIn.toMillis() | date:'dd.MM.yyyy HH:mm'}} </td>\r\n          </ng-container>\r\n        <!-- Letzter Login Column -->\r\n        <ng-container matColumnDef=\"creationDate\">\r\n            <th mat-header-cell *matHeaderCellDef> Registrierungsdatum </th>\r\n            <td mat-cell *matCellDef=\"let element\" > {{element.creationTime.toMillis() | date:'dd.MM.yyyy HH:mm'}} </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumnsAdmins\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumnsAdmins;\"></tr>\r\n    </table>\r\n\r\n\r\n    <h2 style = \"margin-top: 5%\">Registrierte Mentoren</h2>\r\n    <mat-form-field style = \"width: 60%;\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput (keyup)=\"applyFilterMentors($event)\" #input>\r\n    </mat-form-field>\r\n\r\n    <table style = \"width: 60%;\" mat-table [dataSource]=\"dataSourceMentors\" class=\"mat-elevation-z8\">\r\n        <!-- Email Column -->\r\n        <ng-container matColumnDef=\"email\">\r\n            <th mat-header-cell *matHeaderCellDef> Email </th>\r\n            <td mat-cell *matCellDef=\"let element\" > {{element.email}} </td>\r\n          </ng-container>\r\n        <!-- Letzter Login Column -->\r\n        <ng-container matColumnDef=\"lastLogin\">\r\n            <th mat-header-cell *matHeaderCellDef> Letzter Login </th>\r\n            <td mat-cell *matCellDef=\"let element\" > {{element.lastLoggedIn.toMillis() | date:'dd.MM.yyyy HH:mm'}} </td>\r\n          </ng-container>\r\n        <!-- Letzter Login Column -->\r\n        <ng-container matColumnDef=\"creationDate\">\r\n            <th mat-header-cell *matHeaderCellDef> Registrierungsdatum </th>\r\n            <td mat-cell *matCellDef=\"let element\" > {{element.creationTime.toMillis() | date:'dd.MM.yyyy HH:mm'}} </td>\r\n          </ng-container>\r\n          <!-- Button Column -->\r\n        <ng-container matColumnDef=\"button\">\r\n          <th mat-header-cell *matHeaderCellDef> Bearbeiten </th>\r\n          <td mat-cell *matCellDef=\"let element\" >\r\n            <button mat-raised-button (click) = \"demoteUserToMentee(element)\"> Zum Mentee machen</button>\r\n          </td>\r\n        </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n\r\n\r\n    <h2 style = \"margin-top: 5%\">Registrierte Mentees</h2>\r\n    <mat-form-field style = \"width: 60%;\">\r\n        <mat-label>Email</mat-label>\r\n        <input matInput (keyup)=\"applyFilterMentee($event)\" #input>\r\n    </mat-form-field>\r\n\r\n    <table style = \"width: 60%;\" mat-table [dataSource]=\"dataSourceMentees\" class=\"mat-elevation-z8\">\r\n        <!-- Email Column -->\r\n        <ng-container matColumnDef=\"email\">\r\n            <th mat-header-cell *matHeaderCellDef> Email </th>\r\n            <td mat-cell *matCellDef=\"let element\" > {{element.email}} </td>\r\n          </ng-container>\r\n        <!-- Letzter Login Column -->\r\n        <ng-container matColumnDef=\"lastLogin\">\r\n            <th mat-header-cell *matHeaderCellDef> Letzter Login </th>\r\n            <td mat-cell *matCellDef=\"let element\" > {{element.lastLoggedIn.toMillis() | date:'dd.MM.yyyy HH:mm'}} </td>\r\n          </ng-container>\r\n        <!-- Letzter Login Column -->\r\n        <ng-container matColumnDef=\"creationDate\">\r\n            <th mat-header-cell *matHeaderCellDef> Registrierungsdatum </th>\r\n            <td mat-cell *matCellDef=\"let element\" > {{element.creationTime.toMillis() | date:'dd.MM.yyyy HH:mm'}} </td>\r\n          </ng-container>\r\n           <!-- Button Column -->\r\n        <ng-container matColumnDef=\"button\">\r\n          <th mat-header-cell *matHeaderCellDef> Bearbeiten </th>\r\n          <td mat-cell *matCellDef=\"let element\"> \r\n            <button mat-raised-button (click) = \"promoteUserToMentor(element)\"> Zum Mentor machen</button>  \r\n          </td>\r\n        </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n\r\n    \r\n\r\n\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\n\r\n\r\n\r\nconst materialModules = [\r\n  CdkTreeModule,\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatProgressSpinnerModule,\r\n  MatPaginatorModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatFormFieldModule,\r\n  MatButtonToggleModule,\r\n  MatTreeModule,\r\n  OverlayModule,\r\n  PortalModule,\r\n  MatBadgeModule,\r\n  MatGridListModule,\r\n  MatRadioModule,\r\n  MatDatepickerModule,\r\n  MatTooltipModule,\r\n  MatDialogModule,\r\n  MatSliderModule,\r\n  ClipboardModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ...materialModules\r\n  ],\r\n  exports: [\r\n    ...materialModules\r\n  ],\r\n\r\n})\r\n\r\nexport class AngularMaterialModule { }","import { ForumComponent } from './forum/forum.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminPageComponent } from './admin-page/admin-page.component';\r\nimport { LandingPageComponent } from './landing-page/landing-page.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { ProfilePageComponent } from './profile-page/profile-page.component';\r\nimport { AdminguardService } from './services/adminguard.service';\r\nimport { AuthguardService } from './services/authguard.service';\r\nimport { UnauthorizedComponent } from './unauthorized/unauthorized.component';\r\nimport { ChatComponent } from './chat/chat.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: '', pathMatch: 'full', redirectTo: 'app' },\r\n\r\n  {\r\n    path: 'landing',\r\n    component: LandingPageComponent\r\n  },\r\n  {\r\n    path: 'forum',\r\n    component: ForumComponent\r\n  },\r\n  {\r\n    path: 'app',\r\n    component: MainComponent,\r\n    canActivate: [AuthguardService]\r\n  },\r\n  {\r\n    path: 'admin',\r\n    component: AdminPageComponent,\r\n    canActivate: [AuthguardService, AdminguardService]\r\n  },\r\n  {\r\n    path: 'chat',\r\n    component: ChatComponent,\r\n    canActivate: [AuthguardService]\r\n  },\r\n  {\r\n    path: 'unauthorized',\r\n    component: UnauthorizedComponent,\r\n    canActivate: [AuthguardService]\r\n  },\r\n  {\r\n    path: 'profile/:id',\r\n    component: ProfilePageComponent,\r\n    canActivate: [AuthguardService]\r\n  },\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\nimport { FirestoreService } from './services/firestore.service';\r\nimport { DiversITUser } from './models/users.model';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'mintistcool';\r\n  currentUser: DiversITUser;\r\n\r\n  constructor(private router: Router, private auth: AuthService, private firestore: FirestoreService) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.firestore.currentUserStatus.subscribe((data) => {\r\n      this.currentUser = data;\r\n    })\r\n  }\r\n\r\n  isLandingPage() {\r\n    return this.router.url == '/landing';\r\n  }\r\n\r\n  logout(){\r\n    this.auth.logout();\r\n  }\r\n\r\n  diversIT(){\r\n    if(this.router.url === '/app'){\r\n      window.location.reload();\r\n    }\r\n    else{\r\n      this.router.navigate(['/app'])\r\n    }\r\n  }\r\n}\r\n","<main class=\"app-body\">\r\n    <!-- navbar -->\r\n    <mat-toolbar color=\"primary\" *ngIf=\"!isLandingPage()\" style=\"height: 60px; box-shadow: 1px 2px 5px #d3d0d0; position: fixed; z-index: 2;\">\r\n        <span class=\"outer-spacer\"></span>\r\n\r\n        <a style = \"cursor:pointer; font-weight: 600; font-size: xx-large;\" (click)=\"diversIT()\" >Divers<span class=\"accent-color\">IT</span></a>\r\n        <span class=\"spacer\"></span>\r\n        <button mat-icon-button class = \"icon-label\" style=\"margin-right: 40px;\">\r\n            <mat-icon class=\"icon\" id=\"search\" color=\"accent\">search</mat-icon>\r\n            <label for=\"search\" class=\"lable\">Suche</label>\r\n        </button>\r\n        <button mat-icon-button class = \"icon-label\" style=\"margin-right: 50px;\" routerLink = \"/landing\">\r\n            <mat-icon class=\"icon\" id=\"info\" color=\"accent\">info</mat-icon>\r\n            <label for=\"info\" class=\"lable\">Informationen</label>\r\n        </button>\r\n        <button mat-icon-button class = \"icon-label\" style=\"margin-right: 30px; \">\r\n            <mat-icon class=\"icon\" id=\"supervisor_account\" color=\"accent\">supervisor_account</mat-icon>\r\n            <label for=\"supervisor_account\" class=\"lable\">Mentoren</label>\r\n        </button>\r\n        <button mat-icon-button class = \"icon-label\" style=\"margin-right: 60px;\" routerLink = \"/profile/{{currentUser?.uid}}\">\r\n            <mat-icon class=\"icon\" id=\"person\" color=\"accent\">person</mat-icon>\r\n            <label for=\"person\" class=\"lable\">Profil</label>\r\n        </button>\r\n        <button mat-icon-button class = \"icon-label\" style=\"margin-right: 60px; \">\r\n            <mat-icon class=\"icon\" id=\"notifications\" color=\"accent\">notifications</mat-icon>\r\n            <label for=\"notifications\" class=\"lable\">Benachrichtigungen</label>\r\n        </button>\r\n        <button mat-icon-button class = \"icon-label\" style=\"margin-right: 30px;\" routerLink = \"/chat\">\r\n            <mat-icon class=\"icon\" id=\"forum\" color=\"accent\">forum</mat-icon>\r\n            <label for=\"forum\" class=\"lable\">Chat</label>\r\n        </button>\r\n        <button mat-icon-button class = \"icon-label\" (click)=\"logout()\">\r\n            <mat-icon class=\"icon\" id=\"exit_to_app\" color=\"accent\">exit_to_app</mat-icon>\r\n            <label for=\"exit_to_app\" class=\"lable\">Logout</label>\r\n        </button>\r\n\r\n        <span class=\"outer-spacer\"></span>\r\n    </mat-toolbar>\r\n    <div *ngIf=\"!isLandingPage()\" style=\"height: 60px\"></div>\r\n\r\n    <!-- content -->\r\n    <router-outlet></router-outlet>\r\n</main>","import { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AngularMaterialModule } from './angular-material-module';\r\nimport { initializeApp } from '@firebase/app';\r\nimport { LandingPageComponent } from './landing-page/landing-page.component';\r\nimport { LoginBoxComponent } from './login-box/login-box.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { SnackbarComponent } from './snackbar/snackbar.component';\r\nimport { ProfilePageComponent } from './profile-page/profile-page.component';\r\nimport { InterestingMentorsComponent } from './main/main-components/right-panel/interesting-mentors/interesting-mentors.component';\r\nimport { CreatingNewPostCardComponent } from './main/main-components/center-panel/creating-new-post-card/creating-new-post-card.component';\r\nimport { PostCardComponent } from './main/main-components/center-panel/post-card/post-card.component';\r\nimport { CenterPanelComponent } from './main/main-components/center-panel/center-panel.component';\r\nimport { LeftPanelComponent } from './main/main-components/left-panel/left-panel.component';\r\nimport { RightPanelComponent } from './main/main-components/right-panel/right-panel.component';\r\nimport { AdminPageComponent } from './admin-page/admin-page.component';\r\nimport { UnauthorizedComponent } from './unauthorized/unauthorized.component';\r\nimport { MissionComponent } from './landing-page/landing-page-components/mission/mission.component';\r\nimport { MentorSpotlightComponent } from './landing-page/landing-page-components/mentor-spotlight/mentor-spotlight.component';\r\nimport { NavbarComponent } from './landing-page/landing-page-components/navbar/navbar.component';\r\nimport { StickyNavModule } from 'ng2-sticky-nav';\r\nimport { JobProfilesComponent } from './landing-page/landing-page-components/job-profiles/job-profiles.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ProfileCardComponent } from './main/main-components/left-panel/profile-card/profile-card.component';\r\nimport { ChatComponent } from './chat/chat.component';\r\n\r\nconst app = initializeApp(environment.firebaseConfig);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LandingPageComponent,\r\n    LoginBoxComponent,\r\n    MainComponent,\r\n    SnackbarComponent,\r\n    ProfilePageComponent,\r\n    InterestingMentorsComponent,\r\n    CreatingNewPostCardComponent,\r\n    PostCardComponent,\r\n    CenterPanelComponent,\r\n    LeftPanelComponent,\r\n    RightPanelComponent,\r\n    AdminPageComponent,\r\n    UnauthorizedComponent,\r\n    NavbarComponent,\r\n    MissionComponent,\r\n    MentorSpotlightComponent,\r\n    JobProfilesComponent,\r\n    ProfileCardComponent,\r\n    ChatComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    AngularMaterialModule,\r\n    FlexLayoutModule,\r\n    StickyNavModule,\r\n    MatAutocompleteModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [SnackbarComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { Chat, Message } from '../models/chat.model';\r\nimport { DiversITUser } from '../models/users.model';\r\nimport { FirestoreService } from '../services/firestore.service';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n\r\n  currentUser: DiversITUser\r\n  currentUserSubscription: Subscription\r\n  currentChats: Chat[]\r\n  currentChatsSubscription: Subscription\r\n\r\n  \r\n  messageSubscription: Subscription;\r\n  messages: Message[];\r\n\r\n  \r\n  chatOpen: boolean = false;\r\n  activeChat: string;\r\n\r\n  chatunsub\r\n\r\n  textInput: FormControl\r\n\r\n\r\n  constructor(private firestore: FirestoreService) {\r\n    this.textInput = new FormControl('', Validators.required);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUserSubscription = this.firestore.currentUserStatus.subscribe((data) => {\r\n      if(data !== null) {\r\n        this.currentUser = data;\r\n        this.currentChatsSubscription = this.firestore.chatStatus.subscribe((data) => {\r\n          this.currentChats = data;\r\n        })\r\n        this.initialize(data);\r\n      }\r\n    });\r\n  }\r\n\r\n  initialize(user: DiversITUser) {\r\n\r\n  }\r\n\r\n  openChat(chat: Chat) {\r\n    if (this.chatunsub != null) this.chatunsub();\r\n    this.chatunsub = this.firestore.activateMessageListener(chat.uid)\r\n    this.messageSubscription = this.firestore.messagesStatus.subscribe((data) => {\r\n      this.messages = data;\r\n      console.log(data);\r\n    });\r\n    this.chatOpen = true;\r\n    this.activeChat = chat.uid;\r\n\r\n  }\r\n\r\n\r\n  sendMessage() {\r\n    this.firestore.sendMessage(this.activeChat, this.textInput.value, this.currentUser.firstname).then(() => {\r\n      this.textInput.setValue(\"\");\r\n      this.textInput.reset();\r\n    })\r\n  }\r\n\r\n}\r\n","<div *ngFor = \"let chat of currentChats\">\r\n    <div style = \"cursor: pointer;\"  (click) = \"openChat(chat)\">{{chat.uid}}</div>\r\n</div>\r\n\r\n\r\n<div *ngIf = \"chatOpen === true\">\r\n\r\n    <div>Chat</div>\r\n    <h3>Nachrichten:</h3>\r\n    <div *ngFor = \"let message of messages, let i = index\">\r\n        <div>\r\n            {{message.sender}}: {{message.text}}\r\n        </div>\r\n    </div>\r\n    <mat-form-field>\r\n        <input matInput placeholder=\"Hallo, wie gehts?\" type = \"text\" [formControl] = \"textInput\">\r\n      </mat-form-field>\r\n      <div>\r\n        <button mat-raised-button [disabled] = \"!textInput.valid\" (click) = \"sendMessage()\" >Nachricht absenden</button>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forum',\r\n  templateUrl: './forum.component.html',\r\n  styleUrls: ['./forum.component.scss']\r\n})\r\nexport class ForumComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<p>forum works!</p>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-job-profiles',\r\n  templateUrl: './job-profiles.component.html',\r\n  styleUrls: ['./job-profiles.component.scss']\r\n})\r\nexport class JobProfilesComponent implements OnInit {\r\n\r\n  breakpoint: number;\r\n  jobProfiles = new FormControl();\r\n  jobProfilesList: string[] = ['IT-Systemadministrator', 'IT-Techniker', 'UX-Designer', 'Software Engineer', 'Universitätsprofessor für Informatik', 'Scrum Master', 'DevOps Engineer', 'Product Owner'].sort();\r\n  selectedItems: string[] = ['DevOps Engineer', 'IT-Systemadministrator'];\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.breakpoint = (window.innerWidth <= 1363) ? 1 : 2;\r\n  }\r\n\r\n  onResize(event) {\r\n    this.breakpoint = (event.target.innerWidth <= 1363) ? 1 : 2;\r\n  }\r\n\r\n  changeSelection(item: string) {\r\n    if (this.selectedItems.includes(item)) {\r\n      this.selectedItems = this.selectedItems.filter(i => i != item);\r\n    } else {\r\n      this.selectedItems.push(item);\r\n    }\r\n  }\r\n\r\n  changeSelectionEvent(event: Event) {\r\n    let value = (event.target as HTMLSelectElement).value;\r\n    if (this.selectedItems.includes(value)) {\r\n      this.selectedItems = this.selectedItems.filter(i => i != value);\r\n    } else {\r\n      this.selectedItems.push(value);\r\n    }\r\n  }\r\n\r\n}\r\n","<div id=\"job-profiles\" class=\"container\">\r\n    <h2>Job-Profile in der <span>IT</span></h2>\r\n</div>\r\n\r\n<mat-form-field appearance=\"fill\">\r\n    <mat-label>Job-Profile</mat-label>\r\n    <mat-select [formControl]=\"jobProfiles\" multiple [(ngModel)]=\"selectedItems\" matNativeControl\r\n        (change)=\"changeSelectionEvent($event)\">\r\n        <mat-option *ngFor=\"let jobProfile of jobProfilesList\" [value]=\"jobProfile\">{{jobProfile}}</mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n\r\n\r\n\r\n\r\n<mat-grid-list  [cols]=\"breakpoint\" rowHeight=\"1.3:1\" (window:resize)=\"onResize($event)\" gutterSize=\"10\">\r\n\r\n    <mat-grid-tile  *ngIf=\"selectedItems.includes('IT-Systemadministrator')\">\r\n        <mat-card class=\"job-card-finetuning\">\r\n            <mat-card-header>\r\n                <mat-card-title>IT-Systemadministrator</mat-card-title>\r\n                <div mat-card-avatar class=\"header-image\" routerLink=\"/profile/zLccCJEzSGap7BlhefDT0xTyi9I3\"\r\n                    style=\"cursor: pointer; background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg'); background-size: cover;\">\r\n                </div>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-tab-group>\r\n                    <mat-tab label=\"Kurzbeschreibung\">\r\n                        <p>\r\n                            Ein IT-Systemadministrator oder IT-Manager verwaltet die Netzwerk- und Serverinfrastruktur\r\n                            eines Unternehmens. Die Hauptaufgaben sind die Sicherheit der Computersysteme und der\r\n                            elektronischen Daten des Unternehmens, die Entwicklung und Implementierung\r\n                            kundenspezifischer Systeme sowie die Überwachung aller computerbezogenen Aktivitäten.\r\n                        </p>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Typische Aufgaben\">\r\n                        <ul>\r\n                            <li>\r\n                                <p>Überwachung des täglichen Betriebs der Netzwerk- und Serverinfrastruktur</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Ausrichtung der IT-Infrastruktur auf aktuelle und zukünftige\r\n                                    Geschäftsanforderungen\r\n                                    und -ziele</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Verwalten von IT-Budgets, Forecasting, Cashflow-Handling und Durchsetzung der\r\n                                    Kosteneffizienz</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Bewertung von Risiken, Entwicklung von Netzwerkwiederherstellungs- und\r\n                                    Backup-Prozessen\r\n                            </li>\r\n                            <li>\r\n                                <p>Begutachtung und Kauf von Neu- und Ersatzhardware\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Sicherstellen, dass die IT-Aktivitäten innerhalb der Grenzen der geltenden\r\n                                    Gesetze, Kodizes\r\n                                    und Vorschriften liegen</p>\r\n                            </li>\r\n                            <li>\r\n                                <p>Testen, Fehlersuche und Anpassen von Informationssystemen für einen\r\n                                    effektiven\r\n                                    Betrieb</p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Implementierung der Sicherheit des Netzwerks, der Daten und seiner Speicher-\r\n                                    und\r\n                                    Kommunikationssysteme </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Fähigkeiten\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Fähigkeit, Kandidaten einzuschätzen und zu rekrutieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Fähigkeit, neue IT-Mitarbeiter\r\n                                    auszubilden, Teammitglieder zu leiten und zu motivieren </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Erfahrung in der Koordination von Installationen, Upgrades und Wartung </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Fähigkeit, Softwareanforderungen zu identifizieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Kenntnisse von Architekturprozessen und Leistungsberichten von\r\n                                    Betriebssystemen </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Ausgeprägte Fähigkeiten zum kritischen Denken </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Fähigkeiten, die Codeentwicklung zu verstehen und zu überwachen </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Ansprechperson\">\r\n                        <p>Cornelia Eysn</p>\r\n                        <p> DiversIT-Mentorin</p>\r\n                        <button mat-raised-button routerLink=\"/profile/zLccCJEzSGap7BlhefDT0xTyi9I3\"> Zum Profil\r\n                        </button>\r\n                    </mat-tab>\r\n                </mat-tab-group>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile *ngIf=\"selectedItems.includes('IT-Techniker')\">\r\n        <mat-card class=\"job-card-finetuning\">\r\n            <mat-card-header>\r\n                <mat-card-title> IT-Techniker </mat-card-title>\r\n                <div mat-card-avatar class=\"header-image\" routerLink=\"/profile/jbZWHG9F8XRDMdtDrQ6hzLZFUz52\"\r\n                    style=\"cursor: pointer; background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg'); background-size: cover;\">\r\n                </div>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-tab-group>\r\n                    <mat-tab label=\"Kurzbeschreibung\">\r\n                        <p> Ein IT-Techniker oder IT-Support-Techniker ist für die Wartung von Computersystemen und\r\n                            anderen\r\n                            Technologien\r\n                            in einer geschäftlichen Umgebung verantwortlich. Zu ihren Aufgaben gehört es, mit anderen\r\n                            IT-Technikern\r\n                            zusammenzuarbeiten, um Hardware zu installieren und Computerprobleme zu beheben, auf\r\n                            IT-Fragen von\r\n                            Unternehmensmitarbeitern zu antworten und Malware-Schutzgeräte zu aktualisieren, um Viren\r\n                            oder\r\n                            Computer-Hacking zu verhindern.\r\n                        </p>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Typische Aufgaben\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Erhaltung funktionsfähiger Komponenten durch Reparatur oder Austausch </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Unterstützung bei Anrufen oder Live-Chat bei technischen Schwierigkeiten </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Vorbereitung der Website mit korrekter Codierung und Inhalten, die für die\r\n                                    Geschäftsanforderungen des Unternehmens relevant sind </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Überwachung von Klicks, Links, Benutzerfreundlichkeit und Gesamtstatus der\r\n                                    Unternehmenswebseite, Zielseiten und unterstützenden Seiten. </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Unterstützung von Kunden und Mitarbeitern bei Hardware- und\r\n                                    Softwareherausforderungen\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Fähigkeiten\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Problemlösung: IT-Techniker müssen oft ein Problem interpretieren und den\r\n                                    besten Weg\r\n                                    zu\r\n                                    einer Lösung finden. Dies erfordert kritisches Denken, da der IT-Techniker\r\n                                    möglicherweise\r\n                                    zusätzliche Informationen benötigt, die nicht bereitgestellt werden.\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Geduld: IT-Techniker arbeiten eng mit ihren Kunden zusammen. Geduld ist für\r\n                                    dieses\r\n                                    Feld erforderlich. Die Kunden verstehen oft nicht, was mit ihrem System passiert und\r\n                                    beschreiben es möglicherweise nicht richtig. </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Kommunikation: Die Kommunikation mit Kunden, Vorgesetzten und Mitarbeitern\r\n                                    hilft\r\n                                    allen, das Problem und mögliche Lösungen zu verstehen. Eine klare Darstellung der\r\n                                    Situation,\r\n                                    das Befolgen von E-Mails und Telefonaten sorgen für\r\n                                    einen\r\n                                    reibungslosen Prozessablauf.\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Ausdauer: Da IT-Techniker viele Stunden mit komplizierten Projekten arbeiten\r\n                                    können,\r\n                                    ist die Fähigkeit, sich auf das Ziel zu konzentrieren, von entscheidender Bedeutung.\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Ansprechperson\">\r\n                        <p> Stefan Hinterhölzl </p>\r\n                        <p> DiversIT-Mentor </p>\r\n                        <button mat-raised-button routerLink=\"/profile/jbZWHG9F8XRDMdtDrQ6hzLZFUz52\"> Zum Profil\r\n                        </button>\r\n                    </mat-tab>\r\n                </mat-tab-group>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile *ngIf=\"selectedItems.includes('UX-Designer')\">\r\n        <mat-card class=\"job-card-finetuning\">\r\n            <mat-card-header>\r\n                <mat-card-title> UX-Designer </mat-card-title>\r\n                <div mat-card-avatar class=\"header-image\" routerLink=\"/profile/f0fi5AyuXMSlFcmmJTzErrRqFvx1\"\r\n                    style=\"cursor: pointer; background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg'); background-size: cover;\">\r\n                </div>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-tab-group>\r\n                    <mat-tab label=\"Kurzbeschreibung\">\r\n                        <p> Ein UX Designer oder User Experience Designer ist dafür verantwortlich, die\r\n                            Benutzererfahrung zu überwachen und sicherzustellen, dass Websites, Softwareprogramme und\r\n                            Produkte einfach zu bedienen sind. Zu ihren Aufgaben gehören die Überprüfung von\r\n                            Benutzerfeedback, um potenzielle Fehler oder Bereiche auf Klarheit zu ermitteln, die enge\r\n                            Zusammenarbeit mit anderen IT-Experten und Unternehmensmitarbeitern, um die\r\n                            Benutzererfahrung zu verfeinern, und die Durchführung von Usability-Tests an\r\n                            Softwareprodukten oder Websitefunktionen, um die Funktionalität sicherzustellen.\r\n                        </p>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Typische Aufgaben\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Identifizierung von Zielbenutzergruppen und führen von Interviews, um die\r\n                                    Benutzerbedürfnisse zu verstehen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Sicherstellung der Erstellung und Umsetzung maßgeschneiderter Erlebnisse für den\r\n                                    digitalen Nutzer\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Hochwertige Lösungen durch Flussdiagramme, Grafikdesigns, Storyboards und Lagepläne\r\n                                    produzieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Bereitstellung von Anleitungen zur Implementierung von UX-Forschungstechniken und\r\n                                    Testaktivitäten zur Bewertung des Benutzerverhaltens\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Wettbewerbsvorteil gegenüber Konkurrenzprodukten und Branchentrends erhalten\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Tests an Benutzeroberflächenelementen wie CTAs, Layouts, Ziellinks, Landingpages und\r\n                                    Bannern durchführen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Verstehen Sie Produktspezifikationen und Benutzerpsychologie und sagen Sie voraus,\r\n                                    was für beides funktionieren könnte\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Fähigkeiten\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Fähigkeit, Geschäftskennzahlen zu verstehen und Unternehmensziele und -ziele in\r\n                                    digitale Erlebnisse zu übersetzen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Ausgezeichnete zwischenmenschliche und kommunikative Fähigkeiten, um Ideen an\r\n                                    Entwickler zu kommunizieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Kenntnisse in Branchentools wie Adobe Suite, Figma, Sketch\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Problemlösungsfähigkeiten, um Lösungen für Herausforderungen der Benutzeroberfläche\r\n                                    zu finden\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Multitasking- und Zeitmanagementfähigkeiten mit der Fähigkeit, Aufgaben zu\r\n                                    priorisieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Analytischer Verstand mit Geschäftssinn\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Fähigkeit, sowohl selbstständig als auch im Team zu arbeiten\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Liebe zum Detail und Beherrschung des IT-Designs\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Ansprechperson\">\r\n                        <p> Thomas Deutsch </p>\r\n                        <p> DiversIT-Mentor </p>\r\n                        <button mat-raised-button routerLink=\"/profile/f0fi5AyuXMSlFcmmJTzErrRqFvx1\"> Zum Profil\r\n                        </button>\r\n                    </mat-tab>\r\n                </mat-tab-group>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile *ngIf=\"selectedItems.includes('Software Engineer')\">\r\n        <mat-card class=\"job-card-finetuning\">\r\n            <mat-card-header>\r\n                <mat-card-title> Software Engineer </mat-card-title>\r\n                <div mat-card-avatar class=\"header-image\" routerLink=\"/profile/0jiOV3Ihtjg2Gwu3NovseuGTnm02\"\r\n                    style=\"cursor: pointer; background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg'); background-size: cover;\">\r\n                </div>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-tab-group>\r\n                    <mat-tab label=\"Kurzbeschreibung\">\r\n                        <p> Ein UX Designer oder User Experience Designer ist dafür verantwortlich, die\r\n                            Benutzererfahrung zu überwachen und sicherzustellen, dass Websites, Softwareprogramme und\r\n                            Produkte einfach zu bedienen sind. Zu ihren Aufgaben gehören die Überprüfung von\r\n                            Benutzerfeedback, um potenzielle Fehler oder Bereiche auf Klarheit zu ermitteln, die enge\r\n                            Zusammenarbeit mit anderen IT-Experten und Unternehmensmitarbeitern, um die\r\n                            Benutzererfahrung zu verfeinern, und die Durchführung von Usability-Tests an\r\n                            Softwareprodukten oder Websitefunktionen, um die Funktionalität sicherzustellen.\r\n                        </p>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Typische Aufgaben\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Identifizierung von Zielbenutzergruppen und führen von Interviews, um die\r\n                                    Benutzerbedürfnisse zu verstehen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Sicherstellung der Erstellung und Umsetzung maßgeschneiderter Erlebnisse für den\r\n                                    digitalen Nutzer\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Hochwertige Lösungen durch Flussdiagramme, Grafikdesigns, Storyboards und Lagepläne\r\n                                    produzieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Bereitstellung von Anleitungen zur Implementierung von UX-Forschungstechniken und\r\n                                    Testaktivitäten zur Bewertung des Benutzerverhaltens\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Wettbewerbsvorteil gegenüber Konkurrenzprodukten und Branchentrends erhalten\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Tests an Benutzeroberflächenelementen wie CTAs, Layouts, Ziellinks, Landingpages und\r\n                                    Bannern durchführen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Verstehen Sie Produktspezifikationen und Benutzerpsychologie und sagen Sie voraus,\r\n                                    was für beides funktionieren könnte\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Fähigkeiten\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Fähigkeit, Geschäftskennzahlen zu verstehen und Unternehmensziele und -ziele in\r\n                                    digitale Erlebnisse zu übersetzen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Ausgezeichnete zwischenmenschliche und kommunikative Fähigkeiten, um Ideen an\r\n                                    Entwickler zu kommunizieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Kenntnisse in Branchentools wie Adobe Suite, Figma, Sketch\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Problemlösungsfähigkeiten, um Lösungen für Herausforderungen der Benutzeroberfläche\r\n                                    zu finden\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Multitasking- und Zeitmanagementfähigkeiten mit der Fähigkeit, Aufgaben zu\r\n                                    priorisieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Analytischer Verstand mit Geschäftssinn\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Fähigkeit, sowohl selbstständig als auch im Team zu arbeiten\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Liebe zum Detail und Beherrschung des IT-Designs\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Ansprechperson\">\r\n                        <p> Gerald Roither </p>\r\n                        <p> DiversIT-Mentor </p>\r\n                        <button mat-raised-button routerLink=\"/profile/0jiOV3Ihtjg2Gwu3NovseuGTnm02\"> Zum Profil\r\n                        </button>\r\n                    </mat-tab>\r\n                </mat-tab-group>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile *ngIf=\"selectedItems.includes('Scrum Master')\">\r\n        <mat-card class=\"job-card-finetuning\">\r\n            <mat-card-header>\r\n                <mat-card-title> Scrum Master </mat-card-title>\r\n                <div mat-card-avatar class=\"header-image\" routerLink=\"/profile/f0fi5AyuXMSlFcmmJTzErrRqFvx1\"\r\n                    style=\"cursor: pointer; background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg'); background-size: cover;\">\r\n                </div>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-tab-group>\r\n                    <mat-tab label=\"Kurzbeschreibung\">\r\n                        <p> Ein UX Designer oder User Experience Designer ist dafür verantwortlich, die\r\n                            Benutzererfahrung zu überwachen und sicherzustellen, dass Websites, Softwareprogramme und\r\n                            Produkte einfach zu bedienen sind. Zu ihren Aufgaben gehören die Überprüfung von\r\n                            Benutzerfeedback, um potenzielle Fehler oder Bereiche auf Klarheit zu ermitteln, die enge\r\n                            Zusammenarbeit mit anderen IT-Experten und Unternehmensmitarbeitern, um die\r\n                            Benutzererfahrung zu verfeinern, und die Durchführung von Usability-Tests an\r\n                            Softwareprodukten oder Websitefunktionen, um die Funktionalität sicherzustellen.\r\n                        </p>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Typische Aufgaben\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Identifizierung von Zielbenutzergruppen und führen von Interviews, um die\r\n                                    Benutzerbedürfnisse zu verstehen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Sicherstellung der Erstellung und Umsetzung maßgeschneiderter Erlebnisse für den\r\n                                    digitalen Nutzer\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Hochwertige Lösungen durch Flussdiagramme, Grafikdesigns, Storyboards und Lagepläne\r\n                                    produzieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Bereitstellung von Anleitungen zur Implementierung von UX-Forschungstechniken und\r\n                                    Testaktivitäten zur Bewertung des Benutzerverhaltens\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Wettbewerbsvorteil gegenüber Konkurrenzprodukten und Branchentrends erhalten\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Tests an Benutzeroberflächenelementen wie CTAs, Layouts, Ziellinks, Landingpages und\r\n                                    Bannern durchführen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Verstehen Sie Produktspezifikationen und Benutzerpsychologie und sagen Sie voraus,\r\n                                    was für beides funktionieren könnte\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Fähigkeiten\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Fähigkeit, Geschäftskennzahlen zu verstehen und Unternehmensziele und -ziele in\r\n                                    digitale Erlebnisse zu übersetzen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Ausgezeichnete zwischenmenschliche und kommunikative Fähigkeiten, um Ideen an\r\n                                    Entwickler zu kommunizieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Kenntnisse in Branchentools wie Adobe Suite, Figma, Sketch\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Problemlösungsfähigkeiten, um Lösungen für Herausforderungen der Benutzeroberfläche\r\n                                    zu finden\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Multitasking- und Zeitmanagementfähigkeiten mit der Fähigkeit, Aufgaben zu\r\n                                    priorisieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Analytischer Verstand mit Geschäftssinn\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Fähigkeit, sowohl selbstständig als auch im Team zu arbeiten\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Liebe zum Detail und Beherrschung des IT-Designs\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Ansprechperson\">\r\n                        <p> Thomas Deutsch </p>\r\n                        <p> DiversIT-Mentor </p>\r\n                        <button mat-raised-button routerLink=\"/profile/f0fi5AyuXMSlFcmmJTzErrRqFvx1\"> Zum Profil\r\n                        </button>\r\n                    </mat-tab>\r\n                </mat-tab-group>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile *ngIf=\"selectedItems.includes('Product Owner')\">\r\n        <mat-card class=\"job-card-finetuning\">\r\n            <mat-card-header>\r\n                <mat-card-title> Product Owner </mat-card-title>\r\n                <div mat-card-avatar class=\"header-image\" routerLink=\"/profile/zLccCJEzSGap7BlhefDT0xTyi9I3\"\r\n                    style=\"cursor: pointer; background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg'); background-size: cover;\">\r\n                </div>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-tab-group>\r\n                    <mat-tab label=\"Kurzbeschreibung\">\r\n                        <p> Ein UX Designer oder User Experience Designer ist dafür verantwortlich, die\r\n                            Benutzererfahrung zu überwachen und sicherzustellen, dass Websites, Softwareprogramme und\r\n                            Produkte einfach zu bedienen sind. Zu ihren Aufgaben gehören die Überprüfung von\r\n                            Benutzerfeedback, um potenzielle Fehler oder Bereiche auf Klarheit zu ermitteln, die enge\r\n                            Zusammenarbeit mit anderen IT-Experten und Unternehmensmitarbeitern, um die\r\n                            Benutzererfahrung zu verfeinern, und die Durchführung von Usability-Tests an\r\n                            Softwareprodukten oder Websitefunktionen, um die Funktionalität sicherzustellen.\r\n                        </p>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Typische Aufgaben\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Identifizierung von Zielbenutzergruppen und führen von Interviews, um die\r\n                                    Benutzerbedürfnisse zu verstehen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Sicherstellung der Erstellung und Umsetzung maßgeschneiderter Erlebnisse für den\r\n                                    digitalen Nutzer\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Hochwertige Lösungen durch Flussdiagramme, Grafikdesigns, Storyboards und Lagepläne\r\n                                    produzieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Bereitstellung von Anleitungen zur Implementierung von UX-Forschungstechniken und\r\n                                    Testaktivitäten zur Bewertung des Benutzerverhaltens\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Wettbewerbsvorteil gegenüber Konkurrenzprodukten und Branchentrends erhalten\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Tests an Benutzeroberflächenelementen wie CTAs, Layouts, Ziellinks, Landingpages und\r\n                                    Bannern durchführen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Verstehen Sie Produktspezifikationen und Benutzerpsychologie und sagen Sie voraus,\r\n                                    was für beides funktionieren könnte\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Fähigkeiten\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Fähigkeit, Geschäftskennzahlen zu verstehen und Unternehmensziele und -ziele in\r\n                                    digitale Erlebnisse zu übersetzen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Ausgezeichnete zwischenmenschliche und kommunikative Fähigkeiten, um Ideen an\r\n                                    Entwickler zu kommunizieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Kenntnisse in Branchentools wie Adobe Suite, Figma, Sketch\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Problemlösungsfähigkeiten, um Lösungen für Herausforderungen der Benutzeroberfläche\r\n                                    zu finden\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Multitasking- und Zeitmanagementfähigkeiten mit der Fähigkeit, Aufgaben zu\r\n                                    priorisieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Analytischer Verstand mit Geschäftssinn\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Fähigkeit, sowohl selbstständig als auch im Team zu arbeiten\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Liebe zum Detail und Beherrschung des IT-Designs\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Ansprechperson\">\r\n                        <p> Cornelia Eysn </p>\r\n                        <p> DiversIT-Mentorin </p>\r\n                        <button mat-raised-button routerLink=\"/profile/zLccCJEzSGap7BlhefDT0xTyi9I3\"> Zum Profil\r\n                        </button>\r\n                    </mat-tab>\r\n                </mat-tab-group>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile *ngIf=\"selectedItems.includes('Universitätsprofessor für Informatik')\">\r\n        <mat-card class=\"job-card-finetuning\">\r\n            <mat-card-header>\r\n                <mat-card-title> Universitätsprofessor für Informatik </mat-card-title>\r\n                <div mat-card-avatar class=\"header-image\" routerLink=\"/profile/0jiOV3Ihtjg2Gwu3NovseuGTnm02\"\r\n                    style=\"cursor: pointer; background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg'); background-size: cover;\">\r\n                </div>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-tab-group>\r\n                    <mat-tab label=\"Kurzbeschreibung\">\r\n                        <p> Ein UX Designer oder User Experience Designer ist dafür verantwortlich, die\r\n                            Benutzererfahrung zu überwachen und sicherzustellen, dass Websites, Softwareprogramme und\r\n                            Produkte einfach zu bedienen sind. Zu ihren Aufgaben gehören die Überprüfung von\r\n                            Benutzerfeedback, um potenzielle Fehler oder Bereiche auf Klarheit zu ermitteln.\r\n                        </p>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Typische Aufgaben\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Identifizierung von Zielbenutzergruppen und führen von Interviews, um die\r\n                                    Benutzerbedürfnisse zu verstehen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Sicherstellung der Erstellung und Umsetzung maßgeschneiderter Erlebnisse für den\r\n                                    digitalen Nutzer\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Hochwertige Lösungen durch Flussdiagramme, Grafikdesigns, Storyboards und Lagepläne\r\n                                    produzieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Bereitstellung von Anleitungen zur Implementierung von UX-Forschungstechniken und\r\n                                    Testaktivitäten zur Bewertung des Benutzerverhaltens\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Wettbewerbsvorteil gegenüber Konkurrenzprodukten und Branchentrends erhalten\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Fähigkeiten\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Fähigkeit, Geschäftskennzahlen zu verstehen und Unternehmensziele und -ziele in\r\n                                    digitale Erlebnisse zu übersetzen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Ausgezeichnete zwischenmenschliche und kommunikative Fähigkeiten, um Ideen an\r\n                                    Entwickler zu kommunizieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Kenntnisse in Branchentools wie Adobe Suite, Figma, Sketch\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Problemlösungsfähigkeiten, um Lösungen für Herausforderungen der Benutzeroberfläche\r\n                                    zu finden\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Multitasking- und Zeitmanagementfähigkeiten mit der Fähigkeit, Aufgaben zu\r\n                                    priorisieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Analytischer Verstand mit Geschäftssinn\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Ansprechperson\">\r\n                        <p> Gerald Roither </p>\r\n                        <p> DiversIT-Mentor </p>\r\n                        <button mat-raised-button routerLink=\"/profile/0jiOV3Ihtjg2Gwu3NovseuGTnm02\"> Zum Profil\r\n                        </button>\r\n                    </mat-tab>\r\n                </mat-tab-group>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </mat-grid-tile>\r\n\r\n    <mat-grid-tile *ngIf=\"selectedItems.includes('DevOps Engineer')\">\r\n        <mat-card class=\"job-card-finetuning\">\r\n            <mat-card-header>\r\n                <mat-card-title> DevOps Engineer </mat-card-title>\r\n                <div mat-card-avatar class=\"header-image\" routerLink=\"/profile/jbZWHG9F8XRDMdtDrQ6hzLZFUz52\"\r\n                    style=\"cursor: pointer; background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg'); background-size: cover;\">\r\n                </div>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <mat-tab-group>\r\n                    <mat-tab label=\"Kurzbeschreibung\">\r\n                        <p> Ein UX Designer oder User Experience Designer ist dafür verantwortlich, die\r\n                            Benutzererfahrung zu überwachen und sicherzustellen, dass Websites, Softwareprogramme und\r\n                            Produkte einfach zu bedienen sind. Zu ihren Aufgaben gehören die Überprüfung von\r\n                            Benutzerfeedback, um potenzielle Fehler oder Bereiche auf Klarheit zu ermitteln.\r\n                        </p>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Typische Aufgaben\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Identifizierung von Zielbenutzergruppen und führen von Interviews, um die\r\n                                    Benutzerbedürfnisse zu verstehen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Sicherstellung der Erstellung und Umsetzung maßgeschneiderter Erlebnisse für den\r\n                                    digitalen Nutzer\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Hochwertige Lösungen durch Flussdiagramme, Grafikdesigns, Storyboards und Lagepläne\r\n                                    produzieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Bereitstellung von Anleitungen zur Implementierung von UX-Forschungstechniken und\r\n                                    Testaktivitäten zur Bewertung des Benutzerverhaltens\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Wettbewerbsvorteil gegenüber Konkurrenzprodukten und Branchentrends erhalten\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Fähigkeiten\">\r\n                        <ul>\r\n                            <li>\r\n                                <p> Fähigkeit, Geschäftskennzahlen zu verstehen und Unternehmensziele und -ziele in\r\n                                    digitale Erlebnisse zu übersetzen\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Ausgezeichnete zwischenmenschliche und kommunikative Fähigkeiten, um Ideen an\r\n                                    Entwickler zu kommunizieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Kenntnisse in Branchentools wie Adobe Suite, Figma, Sketch\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Problemlösungsfähigkeiten, um Lösungen für Herausforderungen der Benutzeroberfläche\r\n                                    zu finden\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Multitasking- und Zeitmanagementfähigkeiten mit der Fähigkeit, Aufgaben zu\r\n                                    priorisieren\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <p> Analytischer Verstand mit Geschäftssinn\r\n                                </p>\r\n                            </li>\r\n                        </ul>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Ansprechperson\">\r\n                        <p> Stefan Hinterhölzl </p>\r\n                        <p> DiversIT-Mentor </p>\r\n                        <button mat-raised-button routerLink=\"/profile/jbZWHG9F8XRDMdtDrQ6hzLZFUz52\"> Zum Profil\r\n                        </button>\r\n                    </mat-tab>\r\n                </mat-tab-group>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </mat-grid-tile>\r\n\r\n</mat-grid-list>","import { FirestoreService } from './../../../services/firestore.service';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mentor-spotlight',\r\n  templateUrl: './mentor-spotlight.component.html',\r\n  styleUrls: ['./mentor-spotlight.component.scss']\r\n})\r\nexport class MentorSpotlightComponent {\r\n\r\n  constructor(private firestore: FirestoreService) { }\r\n\r\n}\r\n","<div id=\"mentor-spotlight\" >\r\n    <div  class=\"container\" >\r\n        <h2>Mentor<span>innen</span> Spotlight</h2>\r\n    </div>\r\n\r\n    <mat-card class=\"mentor-card-finetuning\">\r\n        <mat-card-header>\r\n            <mat-card-title>Cornelia <span>Eysn</span></mat-card-title>\r\n            <mat-card-subtitle>\r\n                DiversIT-Mentorin, QA Engineer bei Avocodo\r\n                <ul>\r\n                    <li>Matura am Gymnasium</li>\r\n                    <li>BSc BWL an der JKU</li>\r\n                    <li>Mehrjährige Berufserfahrung im Marketing und Eventmanagement</li>\r\n                    <li>Studienbeginn MSc Wirtschaftsinformatik an der JKU in Bildungskarenz</li>\r\n                    <li>Quereinsteigerin mit 30+</li>\r\n                    <li>Einstieg als QA Engineer / Testautomation Engineer in Teilzeit</li>\r\n                    <li>Übergang zur Backend-Entwicklerin in Vollzeit 2022</li>\r\n                </ul>\r\n            </mat-card-subtitle>\r\n            <div mat-card-avatar class=\"header-image\" routerLink=\"/profile/zLccCJEzSGap7BlhefDT0xTyi9I3\"\r\n                style=\"cursor: pointer; background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg'); background-size: cover;\">\r\n            </div>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n        </mat-card-content>\r\n        <mat-card-actions><button mat-raised-button routerLink=\"/profile/zLccCJEzSGap7BlhefDT0xTyi9I3\"> Mentee werden\r\n            </button></mat-card-actions>\r\n    </mat-card>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mission',\r\n  templateUrl: './mission.component.html',\r\n  styleUrls: ['./mission.component.scss']\r\n})\r\nexport class MissionComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div id=\"mission\">\r\n    <div  class=\"container\" hidden>\r\n        <h2>Die Divers<span>IT</span> Mission</h2>\r\n    </div>\r\n\r\n    <div class=\"mission ptb-100\">\r\n        <div class=\"container\">\r\n            <div class=\"mission-content\">\r\n                <div class=\"section-title mb-0\">\r\n                    <h2>Die Divers<span>IT</span>-Mission</h2>\r\n                    <h3>Wir vernetzen dich mit Mentor<span>innen</span> aus Forschung und Praxis</h3>\r\n                    <h3>Wir helfen dir beim Einstieg in deine <span>IT</span>-Ausbildung</h3>\r\n                    <h3>Wir bringen dich mit deinen Peers in Verbindung</h3>\r\n                    <h3>Wir zeigen dir die vielen Facetten der IT</h3>\r\n                    <h3>Wir weisen dir den Weg zu deinem persönlichen <span>IT</span>-Traumberuf</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { ViewportScroller } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { DiversITUser } from 'src/app/models/users.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { FirestoreService } from 'src/app/services/firestore.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit, OnDestroy {\r\n\r\n  currentUser: DiversITUser\r\n  currentUserSubscription: Subscription\r\n\r\n  constructor(private viewportScroller: ViewportScroller, private firestore: FirestoreService, private auth: AuthService) { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.currentUserSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUserSubscription = this.firestore.currentUserStatus.subscribe((data) => {\r\n      this.currentUser = data;\r\n      if(data != null) {\r\n        this.loginApplied = false;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  public onClick(elementId: string): void {\r\n    this.viewportScroller.setOffset([0, 72.5])\r\n    this.viewportScroller.scrollToAnchor(elementId);\r\n    \r\n  }\r\n\r\n  classApplied = false;\r\n  loginApplied = false;\r\n\r\n  toggleClass() {\r\n    this.classApplied = !this.classApplied;\r\n  }\r\n\r\n  toggleLogin() {\r\n    this.loginApplied = !this.loginApplied;\r\n  }\r\n\r\n  logout() {\r\n    this.auth.logout();\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-light\" [class.active]=\"classApplied\" ngStickyNav stickyClass=\"sticky-box-shadow\" >\r\n    <div class=\"container\">\r\n        <a class=\"navbar-brand\" routerLink=\"/\"\r\n            style=\"display: flex; flex-direction: row; justify-content: left; align-items: center;\">Divers<span>IT</span></a>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav ml-auto\">\r\n\r\n                <li class=\"nav-item\"><span class=\"nav-link\" (click)=\"toggleClass(); onClick('home')\">Home</span></li>\r\n                <li class=\"nav-item\"><span class=\"nav-link\" (click)=\"toggleClass(); onClick('mentor-spotlight')\">Mentor\r\n                        Spotlight</span></li>\r\n                <li class=\"nav-item\"><span class=\"nav-link\"\r\n                        (click)=\"toggleClass(); onClick('job-profiles')\">Job-Profile</span></li>\r\n                <li class=\"nav-item\"><span class=\"nav-link\" (click)=\"toggleClass(); onClick('mission')\">Mission</span>\r\n                </li>\r\n                <li class=\"nav-item\"><span class=\"nav-link\" (click)=\"toggleClass()\"\r\n                        [routerLink]=\"['../forum']\">Forum</span>\r\n                </li>\r\n                <li *ngIf = \"currentUser === null\" class=\"nav-item\"><span class=\"nav-link\" (click)=\"toggleLogin()\">Login</span></li>\r\n                <li *ngIf = \"currentUser !== null\" class=\"nav-item\"><span class=\"nav-link\" (click)=\"logout()\">Ausloggen</span></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <app-login-box *ngIf=\"loginApplied\" style=\"justify-self: right; justify-content: right;\">\r\n    </app-login-box>\r\n</nav>","import { ViewportScroller } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-landing-page',\r\n  templateUrl: './landing-page.component.html',\r\n  styleUrls: ['./landing-page.component.scss']\r\n})\r\nexport class LandingPageComponent {\r\n\r\n  constructor(private router: Router, private viewportScroller: ViewportScroller) { }\r\n\r\n  public onClick(elementId: string): void {\r\n    this.viewportScroller.scrollToAnchor(elementId);\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"main-banner item-bg-one\" id=\"home\">\r\n    <div style=\"display: flex; height: 100%; width: 100%;\">\r\n        <div class=\"main-banner-text\">\r\n            <h4>Die IT braucht dich - nimm die Herausforderung an!</h4>\r\n            <h1>Die <span>IT</span>-Branche ist vielseitiger, als du denkst.</h1>\r\n            <p>Finde auch du deinen Platz.</p>\r\n            <p>Vernetze dich mit IT-Interessierten mit einem ähnlichen Background und\r\n                finde eine Mentorin oder einen Mentor, der zu dir passt.</p>\r\n            <p>Geh deinen eigenen Weg in der IT.</p>\r\n            <a [routerLink]=\"['../app']\" class=\"btn btn-primary\">Los geht's</a>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div>\r\n\r\n    <app-mentor-spotlight id=\"mentor-spotlight\">\r\n    </app-mentor-spotlight>\r\n    <app-job-profiles id=\"job-profiles\"></app-job-profiles>\r\n    <app-mission id=\"mission\">\r\n    </app-mission>\r\n\r\n</div>","import { Component } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login-box',\r\n  templateUrl: './login-box.component.html',\r\n  styleUrls: ['./login-box.component.scss']\r\n})\r\nexport class LoginBoxComponent {\r\n\r\n  constructor(private auth: AuthService) { }\r\n\r\n  socialLogin(provider: string) {\r\n    this.auth.socialLogin(provider);\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class = \"main-wrapper\" style = \"min-width: 300px;\">\r\n    <mat-card style =  \"background-color: whitesmoke\">\r\n        <div fxLayout = \"column\" fxLayoutAlign = \"center center\">\r\n            <mat-card-title>\r\n                Login\r\n            </mat-card-title>\r\n            <div style = \"margin-top: 5%;\">\r\n                <button   mat-raised-button  (click) = \"socialLogin('google')\" >Mit Google anmelden</button>\r\n            </div>\r\n            <div style = \"margin-top: 5%;\">\r\n                <button   mat-raised-button  (click) = \"socialLogin('github')\" >Mit GitHub anmelden</button>\r\n            </div>\r\n            <div style = \"margin-top: 5%;\">\r\n                <button   mat-raised-button  (click) = \"socialLogin('facebook')\" >Mit Facebook anmelden</button>\r\n            </div>\r\n        </div>\r\n    </mat-card>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { throwToolbarMixedModesError } from '@angular/material/toolbar';\r\nimport { Post, PostDisplay } from 'src/app/models/post.model';\r\nimport { DiversITUser } from 'src/app/models/users.model';\r\nimport { FirestoreService } from 'src/app/services/firestore.service';\r\n\r\n@Component({\r\n  selector: 'app-center-panel',\r\n  templateUrl: './center-panel.component.html',\r\n  styleUrls: ['./center-panel.component.scss']\r\n})\r\nexport class CenterPanelComponent implements OnInit {\r\n\r\n  constructor(private firestore: FirestoreService) { }\r\n\r\n  currentUser: DiversITUser;\r\n  mentors: DiversITUser[];\r\n  posts: PostDisplay[] = [];\r\n\r\n  ngOnInit(): void {    \r\n    this.firestore.currentUserStatus.subscribe((data) => {\r\n      if (data != null) {\r\n        this.currentUser = data\r\n        if(this.currentUser.role == 3)this.initializeMentee()\r\n        else if(this.currentUser.role == 2)this.initializeMentor()\r\n      }\r\n    });\r\n  }\r\n\r\n  initializeMentee(){\r\n    this.firestore.currentUserMentorsStatus.subscribe(async (data) => {\r\n      if(data == null) return;\r\n      this.mentors = data;\r\n      this.posts = [];\r\n\r\n      // loop through all mentors and get all posts of each mentor\r\n      for( let i = 0; i< this.mentors.length; i++){\r\n        let postsOfMentor: Post[] = await this.firestore.getPostUser(this.mentors[i].uid)\r\n        // remodel the post to contain all necessary data\r\n        for( let j = 0; j < postsOfMentor.length; j++){\r\n          const newDisplayPost = <PostDisplay>{\r\n            userID: postsOfMentor[j].userID,\r\n            userName: this.mentors[i].firstname + \" \" + this.mentors[i].lastname,\r\n            userImgURL: this.mentors[i].photoURL,\r\n            text: postsOfMentor[j].text,\r\n            timestamp: postsOfMentor[j].timestamp,\r\n            photoURL: postsOfMentor[j].photoURL\r\n          }          \r\n          this.posts.push(newDisplayPost)          \r\n        }\r\n      }\r\n      // all posts should be loaded\r\n      this.posts.sort((a,b) => b.timestamp.toMillis() - a.timestamp.toMillis())\r\n      \r\n    })\r\n  }\r\n\r\n  initializeMentor(){\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"center-panel\" style =\"min-width: 100%;\">\r\n    <div>\r\n        <app-post-card *ngFor=\"let post of posts\" userid= \"{{post.userID}}\" name=\"{{post.userName}}\" profileImg=\"{{post.userImgURL}}\" time=\"{{post.timestamp.toMillis()}}\" content=\"{{post.text}}\" contentImg=\"{{post.photoURL}}\"></app-post-card>\r\n        <app-post-card *ngIf=\"posts.length === 0\" content=\"Du bist noch mit keinem Mentor vernetzt.\"></app-post-card>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-creating-new-post-card',\r\n  templateUrl: './creating-new-post-card.component.html',\r\n  styleUrls: ['./creating-new-post-card.component.scss']\r\n})\r\nexport class CreatingNewPostCardComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<p>creating-new-post-card works!</p>\r\n","import { Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-post-card',\r\n  templateUrl: './post-card.component.html',\r\n  styleUrls: ['./post-card.component.scss']\r\n})\r\nexport class PostCardComponent {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  @Input() userid: string;\r\n  @Input() name: string;\r\n  @Input() time: string;\r\n  @Input() profileImg: string;\r\n  @Input() content: string;\r\n  @Input() contentImg: string;\r\n\r\n\r\n  navigateToProfile() {\r\n    this.router.navigate([\"profile/\" + this.userid])\r\n  }\r\n}\r\n","<mat-card class=\"card-finetuning\">\r\n  <mat-card-header *ngIf=\"profileImg !== undefined || name !== undefined || time !== undefined\">\r\n    <div *ngIf=\"profileImg !== ''\" mat-card-avatar (click)=\"navigateToProfile()\"\r\n      style=\"cursor: pointer; background-image: url('{{profileImg}}'); background-size: cover;\"></div>\r\n    <div *ngIf=\"profileImg === ''\" mat-card-avatar (click)=\"navigateToProfile()\"\r\n      style=\"cursor: pointer; background-image: url('./../../../../../assets/Images/User-Placeholder.png'); background-size: cover;\">\r\n    </div>\r\n    <mat-card-title (click)=\"navigateToProfile()\" style=\"cursor: pointer;\">{{name !== \" \" ? name : \"Kein Name\"}}\r\n    </mat-card-title>\r\n    <mat-card-subtitle (click)=\"navigateToProfile()\" style=\"cursor: pointer;\">{{time | date: 'dd.MM.yyyy hh:mm:ss'}}\r\n    </mat-card-subtitle>\r\n  </mat-card-header>\r\n  <mat-card-content [ngClass]=\"{'empty-post': (time === undefined && name === undefined && profileImg === undefined)}\">\r\n    <p>\r\n      {{content}}\r\n    </p>\r\n  </mat-card-content>\r\n  <img src=\"{{contentImg}}\" onerror=\"style='display: none; height: 0px'\" style=\"width: 100%; border-radius: 10px;\">\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { DiversITUser } from 'src/app/models/users.model';\r\nimport { FirestoreService } from 'src/app/services/firestore.service';\r\nimport { InterestingMentorsComponent } from '../right-panel/interesting-mentors/interesting-mentors.component';\r\n\r\n@Component({\r\n  selector: 'app-left-panel',\r\n  templateUrl: './left-panel.component.html',\r\n  styleUrls: ['./left-panel.component.scss']\r\n})\r\nexport class LeftPanelComponent implements OnInit {\r\n\r\n  constructor(private firestore: FirestoreService)  { }\r\n\r\n  currentUser: DiversITUser = <DiversITUser>{\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    photoURL: \"\",\r\n    job: \"\",\r\n    uid: \"\"\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    this.firestore.currentUserStatus.subscribe(data => {\r\n      if (data === null) return;\r\n      this.currentUser = data;\r\n    })\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"left-panel\">\r\n    <app-profile-card \r\n        userID=\"{{currentUser.uid}}\" \r\n        name=\"{{currentUser.firstname + ' ' + currentUser.lastname}}\" \r\n        profileImg=\"{{currentUser.photoURL}}\" \r\n        job=\"{{currentUser.job}}\" \r\n        company=\"{{currentUser.company}}\"\r\n    ></app-profile-card>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile-card',\r\n  templateUrl: './profile-card.component.html',\r\n  styleUrls: ['./profile-card.component.scss']\r\n})\r\nexport class ProfileCardComponent {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  @Input() userID: string;\r\n  @Input() name: string;\r\n  @Input() profileImg: string;\r\n  @Input() job: string;\r\n  @Input() company: string;\r\n\r\n\r\n\r\n  redirectToProfile() {\r\n    this.router.navigate(['/profile/' + this.userID])\r\n  }\r\n\r\n}\r\n","<mat-card (click)=\"redirectToProfile()\">\r\n    <div class=\"background-image\"></div>\r\n        <div *ngIf=\"profileImg === ''\" mat-card-avatar style=\"background-image: url('./../../../../../assets/Images/User-Placeholder.png');\"></div>\r\n        <div *ngIf=\"profileImg !== ''\" mat-card-avatar style=\"background-image: url('{{profileImg}}');\"></div>\r\n    <mat-card-content>\r\n        <h2 *ngIf=\"name !== ''\">{{name}}</h2>\r\n        <h2 *ngIf=\"name === ' '\">Name nicht abrufbar.</h2>\r\n        <p *ngIf=\"company !== ''\"> {{job}} bei {{company}} </p>\r\n        <p *ngIf=\"company === '' && job !== ''\"> {{job}} </p>\r\n        <p *ngIf=\"company === '' && job === ''\"> Keine Jobinformationen verfügbar. </p>\r\n    </mat-card-content>\r\n  </mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DiversITUser } from 'src/app/models/users.model';\r\nimport { FirestoreService } from 'src/app/services/firestore.service';\r\n\r\n@Component({\r\n  selector: 'app-interesting-mentors',\r\n  templateUrl: './interesting-mentors.component.html',\r\n  styleUrls: ['./interesting-mentors.component.scss']\r\n})\r\n\r\nexport class InterestingMentorsComponent implements OnInit {\r\n\r\n  constructor(private firestore: FirestoreService, private router: Router) { }\r\n\r\n  mentors: DiversITUser[] = [];\r\n  tempMentors: DiversITUser[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.firestore.getAllInterestingMentorsPromise().then(data => {\r\n      this.tempMentors = data;\r\n      if (this.tempMentors !== null) {\r\n        for (let i = 0; i < 3; i++) {\r\n          if (this.tempMentors.length > 0) {\r\n            let randomNumber = Math.floor(Math.random() * this.tempMentors.length);\r\n            this.mentors.push(this.tempMentors[randomNumber]);\r\n            this.tempMentors.splice(randomNumber, 1);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"card-finetuning\">\r\n    <h2>Interessante Mentoren</h2>\r\n    <div *ngFor=\"let mentor of mentors\" class=\"mentor-display\">\r\n      <mat-card-header routerLink=\"/profile/{{mentor.uid}}\">\r\n        <!-- Photo -->\r\n        <img *ngIf=\"mentor.photoURL !== null\"src=\"{{mentor.photoURL}}\"mat-card-avatar />\r\n        <img *ngIf=\"mentor.photoURL === null\"src=\"./../../../../../assets/Images/User-Placeholder.png\"mat-card-avatar />\r\n\r\n        <!-- Name -->\r\n        <mat-card-title *ngIf=\"mentor.firstname !==  '' && mentor.lastname !== ''\">{{mentor.firstname}} {{mentor.lastname}}</mat-card-title>\r\n        <mat-card-title *ngIf=\"mentor.firstname ===  '' && mentor.lastname === ''\">Name nicht abrufbar.</mat-card-title>\r\n        \r\n        <!-- Job And Company -->\r\n        <mat-card-subtitle *ngIf=\"mentor.company !== ''\">{{mentor.job}} bei {{mentor.company}}</mat-card-subtitle>\r\n        <mat-card-subtitle *ngIf=\"mentor.company === ''\">{{mentor.job}}</mat-card-subtitle>\r\n        <mat-card-subtitle *ngIf=\"mentor.company === '' && mentor.job ===''\">Keine Jobinformationen verfügbar.</mat-card-subtitle>\r\n      </mat-card-header>\r\n    </div>\r\n</mat-card>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-right-panel',\r\n  templateUrl: './right-panel.component.html',\r\n  styleUrls: ['./right-panel.component.scss']\r\n})\r\nexport class RightPanelComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div class=\"right-panel\">\r\n    <app-interesting-mentors></app-interesting-mentors>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport {User} from 'firebase/auth';\r\nimport { FirestoreService } from '../services/firestore.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\nimport { DiversITUser } from '../models/users.model';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit, OnDestroy {\r\n\r\n  currentUser: DiversITUser;\r\n  currentUserSubscription: Subscription;\r\n\r\n  constructor(private firestore: FirestoreService, private auth: AuthService) { }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.currentUserSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUserSubscription = this.firestore.currentUserStatus.subscribe((user) => {\r\n      if (user != null) {\r\n        this.currentUser = user;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.auth.logout();\r\n  }\r\n\r\n  addRelationship() {\r\n    this.firestore.addRelationship(\"mBEqh7GLs7RMXmEcL5u5dszw3p53\", this.currentUser.uid);\r\n  }\r\n\r\n}","<!-- <button mat-raised-button routerLink=\"/profile/{{currentUser?.uid}}\">Zum Profil</button>\r\n<button mat-raised-button (click) = \"logout()\">Ausloggen</button>\r\n<button mat-raised-button routerLink=\"/admin\">Zur Admin Page</button>\r\n<button mat-raised-button (click) = \"testAddRelationship()\">Test Add Mentee Methode</button>\r\n<button mat-raised-button routerLink = \"/chat\">Chat</button> -->\r\n<div class=\"main\">\r\n    <app-left-panel class=\"left-panel\"></app-left-panel>\r\n    <app-center-panel class=\"center-panel\"></app-center-panel>\r\n    <app-right-panel class=\"right-panel\"></app-right-panel>\r\n</div>\r\n<button mat-raised-button (click) = \"addRelationship()\">Test Add Mentee Methode</button>","import { ThrowStmt } from '@angular/compiler';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatGridTileHeaderCssMatStyler } from '@angular/material/grid-list';\r\nimport { ActivatedRoute, UrlSerializer } from '@angular/router';\r\nimport { Subscriber, Subscription } from 'rxjs';\r\nimport { Post } from '../models/post.model';\r\nimport { DiversITUser } from '../models/users.model';\r\nimport { FirestoreService } from '../services/firestore.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-page',\r\n  templateUrl: './profile-page.component.html',\r\n  styleUrls: ['./profile-page.component.scss']\r\n})\r\nexport class ProfilePageComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(private firestore: FirestoreService, private route: ActivatedRoute) { }\r\n\r\n  currentUserSubscription: Subscription;\r\n  currentRouteSubscription: Subscription;\r\n  currentUser: DiversITUser; \r\n  alternateUser: DiversITUser;\r\n  ownProfile: boolean;\r\n  posts: Post[];\r\n\r\n  ngOnDestroy(): void {\r\n    this.currentUserSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUserSubscription = this.firestore.currentUserStatus.subscribe((user) => {\r\n      if (user != null) {\r\n        this.currentUser = user;\r\n        this.currentRouteSubscription = this.route.params.subscribe(params => {\r\n          let id: string = params['id'];\r\n          this.initialize(id);\r\n        });\r\n      }\r\n    });    \r\n  }\r\n\r\n  async initialize(id) {\r\n    if (this.currentUser.uid == id) {\r\n      this.ownProfile = true;\r\n\r\n    }\r\n    else {\r\n      this.firestore.getUserPerIDPromise(id).then((data) => {\r\n        this.alternateUser = data;\r\n      }).catch(error => console.log(error));\r\n      this.ownProfile = false;\r\n    }\r\n\r\n    this.firestore.getPostUser(id).then(async (data:Post[]) => {\r\n      this.posts = data;\r\n      console.log(data);\r\n      var user = await this.firestore.getUserPerIDPromise(data[0].userID)\r\n      console.log(user);\r\n    }).catch((error) => console.error(error))\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"ownProfile === true\"> Eigener User: {{currentUser.email}}</div>\r\n<div *ngIf=\"ownProfile === false\"> Fremder User: {{alternateUser.email}}</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { getAuth, onAuthStateChanged, User } from '@firebase/auth';\r\nimport { Observable } from 'rxjs';\r\nimport { DiversITUser } from '../models/users.model';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\nimport { FirestoreService } from './firestore.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminguardService implements CanActivate {\r\n\r\n  constructor(private router: Router, private firestore: FirestoreService, private snackbar: SnackbarComponent) { }\r\n\r\n\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): \r\n  boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    return new Promise((resolve, reject) => {\r\n    const auth = getAuth();\r\n    onAuthStateChanged(auth, async (user: User) => {\r\n        if (user) {\r\n          let u: DiversITUser = await this.firestore.getUserPerIDPromise(user.uid);\r\n          if (u.role == 1) resolve(true);\r\n          else { \r\n            this.router.navigate([\"/app\"]);\r\n            this.snackbar.openSnackBar(\"Unauthorisierter Zugriff\", \"red-snackbar\")\r\n            resolve(false);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {getAuth, signInWithPopup, GoogleAuthProvider, FacebookAuthProvider, GithubAuthProvider} from \"firebase/auth\";\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\nimport { FirestoreService } from './firestore.service';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private router: Router, \r\n    private firestore: FirestoreService, \r\n    private snackbar: SnackbarComponent) { }\r\n\r\n\r\n  socialLogin(socialProvider: string) {\r\n\r\n    const auth = getAuth();\r\n\r\n    let provider: any;\r\n    if (socialProvider == \"facebook\") {\r\n      provider = new FacebookAuthProvider();\r\n    } \r\n    else if (socialProvider == \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    } \r\n    else if (socialProvider == \"github\") {\r\n      provider = new GithubAuthProvider();\r\n    } \r\n\r\n    signInWithPopup(auth, provider)\r\n    .then((result) => {\r\n      const user = result.user;\r\n      //Only on first Login\r\n      this.firestore.UpdateUserAccount(user.uid, user.email, user.photoURL);\r\n      let snackbarRef = this.snackbar.openSnackBar(\"Eingeloggt!\", \"green-snackbar\");\r\n    }).catch((error) => {\r\n      const errorCode = error.code;\r\n      if (errorCode == \"auth/account-exists-with-different-credential\") {\r\n        this.snackbar.openSnackBar(\"Email existiert bereits.\", \"red-snackbar\");\r\n      }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    const auth = getAuth();\r\n    auth.signOut().then(()=> {\r\n      this.router.navigate([\"/landing\"])\r\n      this.snackbar.openSnackBar(\"Abgemeldet!\", \"green-snackbar\");\r\n    });\r\n  }\r\n\r\n  getAuthUserObject() {\r\n    const auth = getAuth();\r\n    return auth.currentUser;\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { getAuth, onAuthStateChanged, User } from '@firebase/auth';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthguardService implements CanActivate {\r\n\r\n  constructor(private router: Router, private snackbar: SnackbarComponent) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): \r\n  boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    return new Promise((resolve, reject) => {\r\n      const auth = getAuth();\r\n\r\n      onAuthStateChanged(auth, (user: User) => {\r\n        if (user) {\r\n          resolve(true);\r\n        } else {\r\n          this.router.navigate([\"/landing\"]);\r\n          this.snackbar.openSnackBar(\"Sie sind nicht eingeloggt!\", \"red-snackbar\")\r\n          resolve(false);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DiversITUser } from '../models/users.model'\r\nimport { getFirestore, collection, doc, where, query, getDocs, getDoc, setDoc, onSnapshot, updateDoc, serverTimestamp, arrayUnion, addDoc, SnapshotOptions, orderBy } from \"firebase/firestore\";\r\nimport { getAuth, onAuthStateChanged, User } from \"firebase/auth\";\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Post } from '../models/post.model';\r\nimport { Chat, Message } from '../models/chat.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirestoreService {\r\n\r\n  constructor() {\r\n    this.authStatusListener();\r\n  }\r\n\r\n  db = getFirestore();\r\n  auth = getAuth();\r\n  usersub;\r\n  chatsub;\r\n\r\n  private currentUser: BehaviorSubject<DiversITUser> = new BehaviorSubject<DiversITUser>(null);\r\n  currentUserStatus = this.currentUser.asObservable();\r\n\r\n  private currentUserMentors: BehaviorSubject<DiversITUser[]> = new BehaviorSubject<DiversITUser[]>(null);\r\n  currentUserMentorsStatus = this.currentUserMentors.asObservable()\r\n\r\n  private currentUserMentees: BehaviorSubject<DiversITUser[]> = new BehaviorSubject<DiversITUser[]>(null);\r\n  currentUserMenteesStatus = this.currentUserMentors.asObservable()\r\n\r\n  private messages: BehaviorSubject<Message[]> = new BehaviorSubject<Message[]>(null);\r\n  messagesStatus = this.messages.asObservable();\r\n\r\n  private chats: BehaviorSubject<Chat[]> = new BehaviorSubject<Chat[]>(null);\r\n  chatStatus = this.chats.asObservable();\r\n\r\n  authStatusListener() {\r\n    onAuthStateChanged(this.auth, (user) => {\r\n      if (user) {\r\n        this.getCurrentUser(user);\r\n      } else {\r\n        this.currentUser.next(null);\r\n        this.currentUserMentors.next(null);\r\n        this.currentUserMentees.next(null);\r\n        if (this.usersub != null) this.usersub();\r\n        if (this.chatsub != null) this.chatsub();\r\n      }\r\n    });\r\n  }\r\n\r\n  async UpdateUserAccount(uid: string, email: string, photoURL: string) {\r\n    const docRef = doc(this.db, \"users\", uid);\r\n    const docSnap = await getDoc(docRef);\r\n\r\n    if (!docSnap.exists()) {\r\n      await setDoc(doc(this.db, \"users\", uid), {\r\n        role: 3,\r\n        email: email,\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        gender: \"\",\r\n        primaryEducation: \"\",\r\n        secondaryEducation: \"\",\r\n        universityEducation: \"\",\r\n        job: \"\",\r\n        uid: uid,\r\n        lastLoggedIn: serverTimestamp(),\r\n        creationTime: serverTimestamp(),\r\n        mentors: [],\r\n        mentees: [],\r\n        company: \"\",\r\n        maxMentees: -1,\r\n        girlsOnlyMentor: false,\r\n        photoURL: photoURL,\r\n      });\r\n    } else {\r\n      updateDoc(docRef, {\r\n        lastLoggedIn: serverTimestamp()\r\n      });\r\n    }\r\n  }\r\n\r\n  getCurrentUser(user: User) {\r\n    this.usersub = onSnapshot(doc(this.db, \"users\", user.uid), (doc) => {\r\n      if (doc.exists()) {\r\n        this.currentUser.next(doc.data() as DiversITUser)\r\n        if ((doc.data() as DiversITUser).role == 3) {\r\n          this.getCurrentUserMentors(doc.data() as DiversITUser);\r\n        }\r\n        else {\r\n          this.getCurrentUserMentees(doc.data() as DiversITUser)\r\n        }\r\n        this.activateChatListener((doc.data() as DiversITUser).chats)\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  async getCurrentUserMentors(user: DiversITUser) {\r\n    let listOfMentors: DiversITUser[] = [];\r\n\r\n    for (let i = 0; i < user.mentors.length; i++) {\r\n      var data = await this.getUserPerIDPromise(user.mentors[i])\r\n      listOfMentors.push(data)\r\n    }\r\n    this.currentUserMentors.next(listOfMentors)\r\n  }\r\n\r\n  async getCurrentUserMentees(user: DiversITUser) {\r\n    let listOfMentees: DiversITUser[] = [];\r\n\r\n    for (let i = 0; i < user.mentees.length; i++) {\r\n      var data = await this.getUserPerIDPromise(user.mentees[i])\r\n      listOfMentees.push(data)\r\n    }\r\n    this.currentUserMentors.next(listOfMentees)\r\n  }\r\n\r\n\r\n  async getUserPerIDPromise(uid: string): Promise<DiversITUser> {\r\n    const docRef = doc(this.db, \"users\", uid);\r\n    const docSnap = await getDoc(docRef);\r\n\r\n    if (docSnap.exists()) {\r\n      return docSnap.data() as DiversITUser\r\n    } else {\r\n      return null\r\n    }\r\n\r\n  }\r\n\r\n\r\n  async getAllUsersPromise(): Promise<DiversITUser[]> {\r\n    const querySnapshot = await getDocs(collection(this.db, \"users\"));\r\n    let array: DiversITUser[] = []\r\n    querySnapshot.forEach((doc) => {\r\n      array.push(doc.data() as DiversITUser)\r\n    });\r\n    return array;\r\n  }\r\n\r\n  async getAllInterestingMentorsPromise(): Promise<DiversITUser[]> {\r\n    const q = query(collection(this.db, \"users\"), where(\"role\", \"==\", 2));\r\n    const querySnapshot = await getDocs(q);\r\n    let array: DiversITUser[] = []\r\n    querySnapshot.forEach((doc) => {\r\n      let mentor = doc.data() as DiversITUser;\r\n      // Check if user/mentee is already in contact with mentor\r\n      let currentUser: DiversITUser = null;\r\n      this.currentUserStatus.subscribe((user) => {\r\n        if (user != null) currentUser = user;\r\n      });\r\n      if (mentor.mentees.includes(currentUser.uid)) return;\r\n      // Check if mentor has already reached max mentee number\r\n      if (mentor.mentees.length == mentor.maxMentees) return;\r\n      array.push(mentor);\r\n    });\r\n    return array;\r\n  }\r\n\r\n  async getPostUser(userID: string): Promise<Post[]> {\r\n    const q = query(collection(this.db, \"posts\"), where(\"userID\", \"==\", userID));\r\n    const querySnapshot = await getDocs(q);\r\n    let array: Post[] = [];\r\n    querySnapshot.forEach((doc) => {\r\n      array.push(doc.data() as Post)\r\n    });\r\n    return array;\r\n  }\r\n\r\n  async addRelationship(mentee: string, mentor: string) {\r\n    const docRefMentor = doc(this.db, \"users\", mentor);\r\n    const docRefMentee = doc(this.db, \"users\", mentee)\r\n\r\n    await updateDoc(docRefMentor, {\r\n      mentees: arrayUnion(mentee)\r\n    });\r\n\r\n    await updateDoc(docRefMentee, {\r\n      mentors: arrayUnion(mentor)\r\n    });\r\n\r\n    this.createChat(mentee, mentor);\r\n\r\n  }\r\n\r\n  async createChat(mentee: string, mentor: string) {\r\n    const colRef = collection(this.db, \"chats\");\r\n    const docRefMentor = doc(this.db, \"users\", mentor);\r\n    const docRefMentee = doc(this.db, \"users\", mentee)\r\n\r\n    const chat = <Chat> {\r\n      uid: null,\r\n      participantA: mentee,\r\n      participantB: mentor,\r\n      lastMessage: \"\",\r\n      newMessage: false,\r\n    }\r\n\r\n    const docRef = await addDoc(colRef, {...chat});\r\n\r\n    const docSnap = await getDoc(docRef);\r\n\r\n    let newUid = \"\";\r\n    if (docSnap.exists()) {\r\n        newUid = docSnap.id;\r\n    }\r\n\r\n    await updateDoc(docRef, {\r\n      uid: newUid\r\n    });\r\n\r\n    await updateDoc(docRefMentor, {\r\n      chats: arrayUnion(newUid)\r\n    });\r\n\r\n    await updateDoc(docRefMentee, {\r\n      chats: arrayUnion(newUid)\r\n    });\r\n  }\r\n\r\n\r\n  async promoteMenteeToMentor(user: DiversITUser) {\r\n    const docRef = doc(this.db, 'users', user.uid)\r\n\r\n    return updateDoc(docRef, {\r\n      role: 2,\r\n      mentors: []\r\n    });\r\n  }\r\n\r\n  async demoteMenteeToMentor(user: DiversITUser) {\r\n    const docRef = doc(this.db, 'users', user.uid)\r\n\r\n    return updateDoc(docRef, {\r\n      role: 3,\r\n      mentees: []\r\n    });\r\n  }\r\n\r\n  activateMessageListener(uid: string) {\r\n    const q = query(collection(this.db, 'chats/'+uid+'/messages'), orderBy(\"timestamp\", \"asc\"))\r\n\r\n    if (q != null) {\r\n\r\n      return onSnapshot(q, (data) => {\r\n        let messages = [];\r\n        data.forEach((doc) => {\r\n          messages.push(doc.data());\r\n        });\r\n        this.messages.next(messages);\r\n      });\r\n    }\r\n  }\r\n\r\n  activateChatListener(chats: string[]) {\r\n    if (chats != null && chats.length > 0) {\r\n      const q = query(collection(this.db, \"chats\"), where(\"uid\", \"in\", chats));\r\n      this.chatsub = onSnapshot(q, (querySnapshot) => {\r\n        const chats = [];\r\n        querySnapshot.forEach((doc) => {\r\n          chats.push(doc.data() as Chat);\r\n        });\r\n        this.chats.next(chats);\r\n      });\r\n    }\r\n  }\r\n\r\n  async sendMessage(chat: string, text: string, sender: string) { //just a testmethod\r\n    const colRef = collection(this.db, 'chats/'+chat+'/messages')\r\n\r\n    const message = <Message> {\r\n      text: text,\r\n      read: false,\r\n      sender: sender,\r\n      timestamp: serverTimestamp(),\r\n    }\r\n    \r\n    await addDoc(colRef, {...message});\r\n\r\n  }\r\n\r\n}\r\n","import { Component} from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-snackbar',\r\n  templateUrl: './snackbar.component.html',\r\n  styleUrls: ['./snackbar.component.scss']\r\n})\r\nexport class SnackbarComponent {\r\n\r\n  timeOut = 5000;\r\n\r\n  constructor(\r\n    public snackBar: MatSnackBar\r\n  ) { }\r\n\r\n\r\n  openSnackBar(message: string, className: string = null, action: string = \" \") {\r\n    return this.snackBar.open(message, action, {\r\n      duration: this.timeOut,\r\n      verticalPosition: 'bottom',\r\n      horizontalPosition: 'end',\r\n      panelClass: [className],\r\n    });\r\n    \r\n\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-unauthorized',\r\n  templateUrl: './unauthorized.component.html',\r\n  styleUrls: ['./unauthorized.component.scss']\r\n})\r\nexport class UnauthorizedComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<p>unauthorized works!</p>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: \"AIzaSyCgeYXPqIXsB27T5WMh4k7ruLExwanjZlg\",\r\n    authDomain: \"mintistcool-be74c.firebaseapp.com\",\r\n    projectId: \"mintistcool-be74c\",\r\n    storageBucket: \"mintistcool-be74c.appspot.com\",\r\n    messagingSenderId: \"169635813377\",\r\n    appId: \"1:169635813377:web:a44b782f659388f4e18800\",\r\n    measurementId: \"G-930B0KR1BL\"\r\n  },\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}